#--------------------------------------------------------------------------------------------------
#                                     General config file
# -------------------------------------------------------------------------------------------------

# Task to be performed
task: "pushing_no_clutter"

# -----------------------------  Task list ------------------------------------
#
# ----- Toy tasks -----
# "acrobot", "piston_block", "pentabot", "floating_cube"
#
# --- Free robot arm motion ---
# "reaching"
#
# --- Non-prehensile manipulation ---
# "pushing_no_clutter", "pushing_low_clutter", "pushing_moderate_clutter",
# "pushing_moderate_clutter_constrained",
# "box_sweep", "3D_pushing", "sweep_multiple"
# "push_soft_into_rigid", "push_soft"
#
# "place"
#
# ---- Locomotion ----
# "walker_walk", "walker_run", "walker_uneven", "humanoid"
#
# ------------------------------------------------------------------------------

# Optimiser
optimiser: "iLQR"  # Possible optimisers: "iLQR", "iLQR_SVR", "stomp", "gradDescent"

# Run mode for the program
runMode: "Optimise_once"

# Valid runModes are:
# "Init_controls"           - Displays the initial controls on repeat.
# "Optimise_once"           - Optimise the trajectory open loop, display the optimised controls and initial controls repeatedly.
# "MPC_until_completion"    - Perform MPC until the task is completed. Display current state of the system.

# Extra testing modes for debugging/generating testing data
# "Generate_test_scenes"          - Generate a set of randomly generated test scenes for the task.
# "Generate_openloop_data"        - Loop through all the test scenes, using current optimiser and perform open loop optimisation tests.
# "Generate_asynchronus_mpc_data" - Loop through all the tests scenes, using current optimiser and perform asyncronus MPC optimisation.
# "Generate_syncronus_mpc_data"   - Loop through all the tests scenes, using current optimiser and perform syncronus MPC optimisation.
# "Generate_filtering_data"       - Loop through all test scenes and evaluate baseline optimisation with and without filtering.
# "Generate_dynamics_data"        - Loop through 100 CSV files and generate A, B, X, U data over a horizon and save to file.

# Special modes - possibly temporary
# "Analyse_toy_contact"           - Analyse the derivatives in toy example with contact.
# "Analyse_toy_contact_keypoints" - Analyse the derivatives in toy example with contact and keypoint method.

taskInitMode: "fromYAML"    # taskInitMode can be, "random", "fromCSV", "fromYAML"
csvRow: 5                 # CSV row to load if taskInitMode is "fromCSV" (0 - 99)

filtering: "none"         # FIR or low_pass or none - Filtering of derivative values over trajectory length.
costDerivsFD: true       # True or false, for FD computation of cost derivatives (makes things slower, use analytical if available)

minIter: 5               # Minimum number of iterations to run Optimiser for
maxIter: 10               # Maximum number of iterations to run Optimiser for

async_mpc: true
record: false